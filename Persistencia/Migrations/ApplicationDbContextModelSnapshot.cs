// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistencia.Contexts;

#nullable disable

namespace Persistencia.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entidades.CategoriaEquipamento", b =>
                {
                    b.Property<int>("CodigoCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodigoCategoria"), 1L, 1);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("CodigoCategoria");

                    b.ToTable("CategoriaEquipamento");
                });

            modelBuilder.Entity("Domain.Entidades.Empresa", b =>
                {
                    b.Property<int>("CodigoEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodigoEmpresa"), 1L, 1);

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("VARCHAR(18)");

                    b.Property<bool>("EmpresaPadraoImpressao")
                        .HasColumnType("BIT");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("VARCHAR(70)");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("VARCHAR(70)");

                    b.HasKey("CodigoEmpresa");

                    b.ToTable("Empresa");

                    b.HasData(
                        new
                        {
                            CodigoEmpresa = 1,
                            CNPJ = "00.000.000/0000-00",
                            EmpresaPadraoImpressao = false,
                            NomeFantasia = "SEM EMPRESA",
                            RazaoSocial = "SEM EMPRESA"
                        });
                });

            modelBuilder.Entity("Domain.Entidades.Equipamento", b =>
                {
                    b.Property<int>("CodigoTipoEquipamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodigoTipoEquipamento"), 1L, 1);

                    b.Property<int>("CodigoCategoria")
                        .HasColumnType("int");

                    b.Property<int>("CodigoFabricante")
                        .HasColumnType("int");

                    b.Property<string>("TipoEquipamento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("CodigoTipoEquipamento");

                    b.HasIndex("CodigoCategoria");

                    b.HasIndex("CodigoFabricante");

                    b.ToTable("Equipamento");
                });

            modelBuilder.Entity("Domain.Entidades.Fabricante", b =>
                {
                    b.Property<int>("CodigoFabricante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodigoFabricante"), 1L, 1);

                    b.Property<string>("NomeFabricante")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR(60)");

                    b.HasKey("CodigoFabricante");

                    b.ToTable("Fabricante");
                });

            modelBuilder.Entity("Domain.Entidades.Funcionario", b =>
                {
                    b.Property<int>("CodigoFuncionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodigoFuncionario"), 1L, 1);

                    b.Property<bool>("Ativo")
                        .HasColumnType("BIT");

                    b.Property<string>("NomeFuncionario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Observacao")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR(250)");

                    b.HasKey("CodigoFuncionario");

                    b.ToTable("Funcionario");

                    b.HasData(
                        new
                        {
                            CodigoFuncionario = 1,
                            Ativo = true,
                            NomeFuncionario = "SEM FUNCIONÁRIO",
                            Observacao = ""
                        });
                });

            modelBuilder.Entity("Domain.Entidades.InformacaoAdicional", b =>
                {
                    b.Property<int>("CodigoInformacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodigoInformacao"), 1L, 1);

                    b.Property<string>("Antivirus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodigoPatrimonio")
                        .HasColumnType("int");

                    b.Property<string>("DataCompra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataExpiracaoGarantia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorPago")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("VersaoWindows")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodigoInformacao");

                    b.HasIndex("CodigoPatrimonio");

                    b.ToTable("InformacaoAdicional");
                });

            modelBuilder.Entity("Domain.Entidades.MovimentacaoEquipamento", b =>
                {
                    b.Property<int>("CodigoMovimentacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodigoMovimentacao"), 1L, 1);

                    b.Property<int>("CodigoPatrimonio")
                        .HasColumnType("int");

                    b.Property<int>("CodigoUsuario")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataApropriacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("DataDevolucao")
                        .HasColumnType("datetime2");

                    b.Property<int>("MovimentacaoDoEquipamento")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodigoMovimentacao");

                    b.HasIndex("CodigoPatrimonio");

                    b.HasIndex("CodigoUsuario");

                    b.ToTable("MovimentacaoEquipamento");
                });

            modelBuilder.Entity("Domain.Entidades.Patrimonio", b =>
                {
                    b.Property<int>("CodigoPatrimonio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodigoPatrimonio"), 1L, 1);

                    b.Property<string>("Armazenamento")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR(60)");

                    b.Property<int>("CodigoFuncionario")
                        .HasColumnType("int");

                    b.Property<int>("CodigoTipoEquipamento")
                        .HasColumnType("int");

                    b.Property<int>("CodigoUsuario")
                        .HasColumnType("int");

                    b.Property<string>("MAC")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("MemoriaRAM")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("PlacaDeVideo")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Processador")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("ServiceTag")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)");

                    b.Property<int>("SituacaoEquipamento")
                        .HasColumnType("int");

                    b.HasKey("CodigoPatrimonio");

                    b.HasIndex("CodigoFuncionario");

                    b.HasIndex("CodigoTipoEquipamento");

                    b.HasIndex("CodigoUsuario");

                    b.ToTable("Patrimonio");
                });

            modelBuilder.Entity("Domain.Entidades.PerdaEquipamento", b =>
                {
                    b.Property<int>("CodigoPerda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodigoPerda"), 1L, 1);

                    b.Property<int>("CodigoPatrimonio")
                        .HasColumnType("int");

                    b.Property<string>("MotivoDaPerda")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("VARCHAR(300)");

                    b.HasKey("CodigoPerda");

                    b.HasIndex("CodigoPatrimonio");

                    b.ToTable("PercaEquipamento");
                });

            modelBuilder.Entity("Domain.Entidades.Setor", b =>
                {
                    b.Property<int>("CodigoSetor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodigoSetor"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("CodigoSetor");

                    b.ToTable("Setor");

                    b.HasData(
                        new
                        {
                            CodigoSetor = 1,
                            Nome = "SEM SETOR"
                        });
                });

            modelBuilder.Entity("Domain.Entidades.Usuario", b =>
                {
                    b.Property<int>("CodigoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodigoUsuario"), 1L, 1);

                    b.Property<bool>("Ativo")
                        .HasColumnType("BIT");

                    b.Property<int?>("CodigoEmpresa")
                        .HasColumnType("int");

                    b.Property<int?>("CodigoSetor")
                        .HasColumnType("int");

                    b.Property<int>("CodigoUsuarioPermissao")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagemUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("VARCHAR(350)");

                    b.HasKey("CodigoUsuario");

                    b.HasIndex("CodigoEmpresa");

                    b.HasIndex("CodigoSetor");

                    b.HasIndex("CodigoUsuarioPermissao");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            CodigoUsuario = 1,
                            Ativo = true,
                            CodigoEmpresa = 1,
                            CodigoSetor = 1,
                            CodigoUsuarioPermissao = 1,
                            Email = "adolfo8799@gmail.com",
                            ImagemUrl = "3f7143f59c222954756.jpg",
                            Nome = "ADOLFO",
                            Senha = "MTIzNDU2"
                        });
                });

            modelBuilder.Entity("Domain.Entidades.UsuarioPermissao", b =>
                {
                    b.Property<int>("CodigoUsuarioPermissao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodigoUsuarioPermissao"), 1L, 1);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("DescricaoPermissao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)");

                    b.HasKey("CodigoUsuarioPermissao");

                    b.ToTable("UsuarioPermissao");

                    b.HasData(
                        new
                        {
                            CodigoUsuarioPermissao = 1,
                            Ativo = true,
                            DescricaoPermissao = "Administrador"
                        },
                        new
                        {
                            CodigoUsuarioPermissao = 2,
                            Ativo = true,
                            DescricaoPermissao = "Gestor"
                        },
                        new
                        {
                            CodigoUsuarioPermissao = 3,
                            Ativo = true,
                            DescricaoPermissao = "Usuário"
                        });
                });

            modelBuilder.Entity("Domain.Entidades.Equipamento", b =>
                {
                    b.HasOne("Domain.Entidades.CategoriaEquipamento", "Categoria")
                        .WithMany()
                        .HasForeignKey("CodigoCategoria")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entidades.Fabricante", "Fabricante")
                        .WithMany()
                        .HasForeignKey("CodigoFabricante")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Fabricante");
                });

            modelBuilder.Entity("Domain.Entidades.InformacaoAdicional", b =>
                {
                    b.HasOne("Domain.Entidades.Patrimonio", "Patrimonio")
                        .WithMany()
                        .HasForeignKey("CodigoPatrimonio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Patrimonio");
                });

            modelBuilder.Entity("Domain.Entidades.MovimentacaoEquipamento", b =>
                {
                    b.HasOne("Domain.Entidades.Patrimonio", "Patrimonio")
                        .WithMany()
                        .HasForeignKey("CodigoPatrimonio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("CodigoUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Patrimonio");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entidades.Patrimonio", b =>
                {
                    b.HasOne("Domain.Entidades.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("CodigoFuncionario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entidades.Equipamento", "Equipamento")
                        .WithMany()
                        .HasForeignKey("CodigoTipoEquipamento")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("CodigoUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Equipamento");

                    b.Navigation("Funcionario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entidades.PerdaEquipamento", b =>
                {
                    b.HasOne("Domain.Entidades.Patrimonio", "Patrimonio")
                        .WithMany()
                        .HasForeignKey("CodigoPatrimonio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Patrimonio");
                });

            modelBuilder.Entity("Domain.Entidades.Usuario", b =>
                {
                    b.HasOne("Domain.Entidades.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("CodigoEmpresa");

                    b.HasOne("Domain.Entidades.Setor", "Setor")
                        .WithMany()
                        .HasForeignKey("CodigoSetor");

                    b.HasOne("Domain.Entidades.UsuarioPermissao", "UsuarioPermissao")
                        .WithMany()
                        .HasForeignKey("CodigoUsuarioPermissao")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Setor");

                    b.Navigation("UsuarioPermissao");
                });
#pragma warning restore 612, 618
        }
    }
}
